#[cfg(test)]
mod permute_values {
    use sabita::core::generator::permute_values;

    ////////////////////

    #[test]
    fn permute_1() {
        let mut to_modify = vec![
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 2, 0, 0, 0, 0, 0, 0, 0],
        ];

        let expected = vec![
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 1, 0, 0, 0, 0, 0, 0, 0],
        ];

        permute_values(&mut to_modify, 1, 2);

        assert_eq!(expected, to_modify, "Matrix are differents");
    }

    #[test]
    fn permute_2() {
        let mut to_modify = vec![
            vec![1, 1, 1, 1, 1, 1, 1, 1, 1],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 2, 2, 2, 2, 2, 2, 2, 2],
        ];

        let expected = vec![
            vec![2, 2, 2, 2, 2, 2, 2, 2, 2],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![0, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 1, 1, 1, 1, 1, 1, 1, 1],
        ];

        permute_values(&mut to_modify, 1, 2);

        assert_eq!(expected, to_modify, "Matrix are differents");
    }

    #[test]
    fn permute_3() {
        let mut to_modify = vec![
            vec![1, 1, 1, 1, 1, 1, 1, 1, 1],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![1, 0, 0, 0, 0, 0, 0, 0, 2],
        ];

        let expected = vec![
            vec![2, 2, 2, 2, 2, 2, 2, 2, 2],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 0],
            vec![2, 0, 0, 0, 0, 0, 0, 0, 1],
        ];

        permute_values(&mut to_modify, 1, 2);

        assert_eq!(expected, to_modify, "Matrix are differents");
    }
}
